[0m[[0m[0mdebug[0m] [0m[0m> Exec(reload, Some(f7b78898-9f45-46b7-bcd8-54eb208970d5), Some(CommandSource(console0)))[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(sbtStashOnFailure, None, Some(CommandSource(console0)))[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(onFailure loadFailed, None, Some(CommandSource(console0)))[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(loadp, None, Some(CommandSource(console0)))[0m
[0m[[0m[0minfo[0m] [0m[0mwelcome to sbt 1.4.9 (Ubuntu Java 11.0.10)[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.defaultLoad until apply took 1.341615ms[0m
[0m[[0m[0mdebug[0m] [0m[0m                Load.loadUnit: plugins took 11.232234ms[0m
[0m[[0m[0mdebug[0m] [0m[0m                Load.loadUnit: defsScala took 0.002329ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Scanning directory /home/leonardo/Desktop/Code/Practice/Scala/Ejercicio Clean Code/Project1/project1/project[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Found non-root projects [0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /home/leonardo/Desktop/Code/Practice/Scala/Ejercicio Clean Code/Project1/project1/project, returning: ()[0m
[0m[[0m[0mdebug[0m] [0m[0mdeducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))[0m
[0m[[0m[0mdebug[0m] [0m[0m  :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)[0m
[0m[[0m[0mdebug[0m] [0m[0mPlugins.deducer#function took 0.633408 ms[0m
[0m[[0m[0mdebug[0m] [0m[0m                    Load.resolveProject(project1-build) took 0.529605ms[0m
[0m[[0m[0mdebug[0m] [0m[0m                  Load.loadTransitive: finalizeProject(Project(id project1-build, base: /home/leonardo/Desktop/Code/Practice/Scala/Ejercicio Clean Code/Project1/project1/project, plugins: List(<none>))) took 1.386567ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /home/leonardo/Desktop/Code/Practice/Scala/Ejercicio Clean Code/Project1/project1/project, returning: (project1-build)[0m
[0m[[0m[0mdebug[0m] [0m[0m                Load.loadUnit: loadedProjectsRaw took 1.804462ms[0m
[0m[[0m[0mdebug[0m] [0m[0m                Load.loadUnit: cleanEvalClasses took 0.007119ms[0m
[0m[[0m[0mdebug[0m] [0m[0m              Load.loadUnit(file:/home/leonardo/Desktop/Code/Practice/Scala/Ejercicio%20Clean%20Code/Project1/project1/project/, ...) took 13.258752ms[0m
[0m[[0m[0mdebug[0m] [0m[0m            Load.apply: load took 13.971519ms[0m
[0m[[0m[0mdebug[0m] [0m[0m            Load.apply: resolveProjects took 0.062133ms[0m
[0m[[0m[0mdebug[0m] [0m[0m            Load.apply: finalTransforms took 4.124963ms[0m
[0m[[0m[0mdebug[0m] [0m[0m            Load.apply: config.delegates took 0.149929ms[0m
[0m[[0m[0mdebug[0m] [0m[0m            Load.apply: Def.make(settings)... took 19.961947ms[0m
[0m[[0m[0mdebug[0m] [0m[0m            Load.apply: structureIndex took 5.736391ms[0m
[0m[[0m[0mdebug[0m] [0m[0m            Load.apply: mkStreams took 0.001487ms[0m
[0m[[0m[0minfo[0m] [0m[0mloading project definition from /home/leonardo/Desktop/Code/Practice/Scala/Ejercicio Clean Code/Project1/project1/project[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning task... Cancel: Signal, check cycles: false, forcegc: true[0m
[0m[[0m[0mdebug[0m] [0m[0m          Load.loadUnit: plugins took 66.505397ms[0m
[0m[[0m[0mdebug[0m] [0m[0m          Load.loadUnit: defsScala took 0.001298ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Scanning directory /home/leonardo/Desktop/Code/Practice/Scala/Ejercicio Clean Code/Project1/project1[0m
[0m[[0m[0mdebug[0m] [0m[0m            Load.loadUnit: mkEval took 0.061624ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Found non-root projects [0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /home/leonardo/Desktop/Code/Practice/Scala/Ejercicio Clean Code/Project1/project1, returning: ()[0m
[0m[[0m[0mdebug[0m] [0m[0mdeducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))[0m
[0m[[0m[0mdebug[0m] [0m[0m  :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)[0m
[0m[[0m[0mdebug[0m] [0m[0mPlugins.deducer#function took 0.38704 ms[0m
[0m[[0m[0minfo[0m] [0m[0mloading settings for project project1 from build.sbt ...[0m
[0m[[0m[0mdebug[0m] [0m[0m              Load.resolveProject(project1) took 0.493525ms[0m
[0m[[0m[0mdebug[0m] [0m[0m            Load.loadTransitive: finalizeProject(Project(id project1, base: /home/leonardo/Desktop/Code/Practice/Scala/Ejercicio Clean Code/Project1/project1, plugins: List(<none>))) took 1.02592ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /home/leonardo/Desktop/Code/Practice/Scala/Ejercicio Clean Code/Project1/project1, returning: (project1)[0m
[0m[[0m[0mdebug[0m] [0m[0m          Load.loadUnit: loadedProjectsRaw took 162.981913ms[0m
[0m[[0m[0mdebug[0m] [0m[0m          Load.loadUnit: cleanEvalClasses took 0.72899ms[0m
[0m[[0m[0mdebug[0m] [0m[0m        Load.loadUnit(file:/home/leonardo/Desktop/Code/Practice/Scala/Ejercicio%20Clean%20Code/Project1/project1/, ...) took 230.365811ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: load took 231.053422ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: resolveProjects took 0.045471ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: finalTransforms took 2.666279ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: config.delegates took 0.127865ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: Def.make(settings)... took 22.597018ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: structureIndex took 6.962631ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: mkStreams took 0.002583ms[0m
[0m[[0m[0minfo[0m] [0m[0mset current project to hello-world (in build file:/home/leonardo/Desktop/Code/Practice/Scala/Ejercicio%20Clean%20Code/Project1/project1/)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(sbtPopOnFailure, None, Some(CommandSource(console0)))[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(resumeFromFailure, None, Some(CommandSource(console0)))[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(shell, None, None)[0m
